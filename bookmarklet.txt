javascript:(function()%7B(function()%7B(() %3D> %7B%0A    async function readClipboard() %7B%0A      try %7B%0A        const text %3D await navigator.clipboard.readText()%3B%0A        return text.trim()%3B%0A      %7D catch (err) %7B%0A        console.error('Failed to read clipboard contents%3A'%2C err)%3B%0A        return ""%3B%0A      %7D%0A    %7D%0A %0A    async function processClipboardContent() %7B%0A      const clipboardText %3D await readClipboard()%3B%0A      if (!clipboardText) %7B%0A        console.log("Clipboard is empty or couldn't be read.")%3B%0A        return%3B%0A      %7D%0A %0A      const prompt %3D "Answer the following as concisely and directly as possible. No introductions%2C explanations%2C or extra words. Just the answer. However%2C make sure you answer the full question with as much detail as required%2C without extraneous info.%5Cn" %2B clipboardText%3B%0A %0A      await sendToAI(prompt)%3B%0A    %7D%0A%0A    async function sendToAI(message%2C imageData %3D null) %7B%0A      const apiKey %3D "GEmINI_API"%3B %2F%2F Replace with your key%0A     %0A      let contents %3D %5B%7B%0A        parts%3A %5B%7B text%3A message %7D%5D%0A      %7D%5D%3B%0A%0A      if (imageData) %7B%0A        contents%5B0%5D.parts.push(%7B%0A          inline_data%3A %7B%0A            mime_type%3A imageData.mimeType%2C%0A            data%3A imageData.data%0A          %7D%0A        %7D)%3B%0A      %7D%0A%0A      try %7B%0A        const response %3D await fetch(%60https%3A%2F%2Fgenerativelanguage.googleapis.com%2Fv1beta%2Fmodels%2Fgemini-2.5-flash-preview-05-20%3AgenerateContent%3Fkey%3D%24%7BapiKey%7D%60%2C %7B%0A          method%3A "POST"%2C%0A          headers%3A %7B "Content-Type"%3A "application%2Fjson" %7D%2C%0A          body%3A JSON.stringify(%7B%0A            contents%3A contents%2C%0A            generationConfig%3A %7B temperature%3A 0.7 %7D%0A          %7D)%0A        %7D)%3B%0A%0A        const data %3D await response.json()%3B%0A        const answer %3D data%3F.candidates%3F.%5B0%5D%3F.content%3F.parts%3F.%5B0%5D%3F.text %7C%7C "No answer."%3B%0A       %0A        %2F%2F Add to chat history%0A        addToChatHistory('user'%2C message%2C imageData)%3B%0A        addToChatHistory('ai'%2C answer)%3B%0A       %0A        localStorage.setItem("aiResponse"%2C answer)%3B%0A        renderTabs()%3B%0A      %7D catch (err) %7B%0A        console.error("API Error%3A"%2C err)%3B%0A        addToChatHistory('ai'%2C "Error%3A Could not get response from AI")%3B%0A      %7D%0A    %7D%0A%0A    function addToChatHistory(sender%2C message%2C imageData %3D null) %7B%0A      const chatHistory %3D JSON.parse(localStorage.getItem("chatHistory") %7C%7C "%5B%5D")%3B%0A      chatHistory.push(%7B%0A        sender%2C%0A        message%2C%0A        imageData%2C%0A        timestamp%3A Date.now()%0A      %7D)%3B%0A      %2F%2F Keep only last 50 messages%0A      if (chatHistory.length > 50) %7B%0A        chatHistory.splice(0%2C chatHistory.length - 50)%3B%0A      %7D%0A      localStorage.setItem("chatHistory"%2C JSON.stringify(chatHistory))%3B%0A    %7D%0A%0A    function renderChatHistory() %7B%0A      const chatHistory %3D JSON.parse(localStorage.getItem("chatHistory") %7C%7C "%5B%5D")%3B%0A      const chatContainer %3D document.getElementById("chatContent")%3B%0A      if (!chatContainer) return%3B%0A%0A      chatContainer.innerHTML %3D ""%3B%0A     %0A      chatHistory.forEach(entry %3D> %7B%0A        const messageDiv %3D document.createElement("div")%3B%0A        messageDiv.style.cssText %3D %60%0A          margin-bottom%3A 8px%3B%0A          padding%3A 4px%3B%0A          border-radius%3A 3px%3B%0A          background%3A %24%7Bentry.sender %3D%3D%3D 'user' %3F 'rgba(0%2C100%2C200%2C0.1)' %3A 'rgba(100%2C100%2C100%2C0.1)'%7D%3B%0A        %60%3B%0A       %0A        const senderLabel %3D document.createElement("div")%3B%0A        senderLabel.textContent %3D entry.sender %3D%3D%3D 'user' %3F 'You%3A' %3A 'AI%3A'%3B%0A        senderLabel.style.cssText %3D "font-weight%3A bold%3B font-size%3A 10px%3B margin-bottom%3A 2px%3B"%3B%0A       %0A        const messageText %3D document.createElement("div")%3B%0A        messageText.textContent %3D entry.message%3B%0A        messageText.style.cssText %3D "font-size%3A 10px%3B line-height%3A 1.2%3B word-wrap%3A break-word%3B"%3B%0A       %0A        messageDiv.append(senderLabel%2C messageText)%3B%0A       %0A        if (entry.imageData) %7B%0A          const img %3D document.createElement("img")%3B%0A          img.src %3D %60data%3A%24%7Bentry.imageData.mimeType%7D%3Bbase64%2C%24%7Bentry.imageData.data%7D%60%3B%0A          img.style.cssText %3D "max-width%3A 100%25%3B max-height%3A 80px%3B margin-top%3A 4px%3B border-radius%3A 2px%3B"%3B%0A          messageDiv.appendChild(img)%3B%0A        %7D%0A       %0A        chatContainer.appendChild(messageDiv)%3B%0A      %7D)%3B%0A     %0A      chatContainer.scrollTop %3D chatContainer.scrollHeight%3B%0A    %7D%0A%0A    function createChatInput() %7B%0A      const inputContainer %3D document.createElement("div")%3B%0A      inputContainer.style.cssText %3D %60%0A        display%3A flex%3B%0A        padding%3A 4px%3B%0A        background%3A rgba(0%2C0%2C0%2C0.2)%3B%0A        gap%3A 4px%3B%0A      %60%3B%0A%0A      const textInput %3D document.createElement("input")%3B%0A      textInput.type %3D "text"%3B%0A      textInput.placeholder %3D "Type message..."%3B%0A      textInput.style.cssText %3D %60%0A        flex%3A 1%3B%0A        background%3A rgba(255%2C255%2C255%2C0.1)%3B%0A        border%3A none%3B%0A        color%3A %23ccc%3B%0A        padding%3A 4px%3B%0A        font-size%3A 10px%3B%0A        border-radius%3A 2px%3B%0A      %60%3B%0A%0A      const fileInput %3D document.createElement("input")%3B%0A      fileInput.type %3D "file"%3B%0A      fileInput.accept %3D "image%2F*"%3B%0A      fileInput.style.display %3D "none"%3B%0A%0A      const imageBtn %3D document.createElement("button")%3B%0A      imageBtn.textContent %3D "ðŸ“·"%3B%0A      imageBtn.style.cssText %3D %60%0A        background%3A rgba(255%2C255%2C255%2C0.1)%3B%0A        border%3A none%3B%0A        color%3A %23ccc%3B%0A        padding%3A 4px 6px%3B%0A        cursor%3A pointer%3B%0A        border-radius%3A 2px%3B%0A        font-size%3A 10px%3B%0A      %60%3B%0A%0A      const sendBtn %3D document.createElement("button")%3B%0A      sendBtn.textContent %3D "Send"%3B%0A      sendBtn.style.cssText %3D %60%0A        background%3A rgba(0%2C100%2C200%2C0.3)%3B%0A        border%3A none%3B%0A        color%3A %23ccc%3B%0A        padding%3A 4px 8px%3B%0A        cursor%3A pointer%3B%0A        border-radius%3A 2px%3B%0A        font-size%3A 10px%3B%0A      %60%3B%0A%0A      let selectedImage %3D null%3B%0A%0A      imageBtn.onclick %3D () %3D> fileInput.click()%3B%0A%0A      fileInput.onchange %3D (e) %3D> %7B%0A        const file %3D e.target.files%5B0%5D%3B%0A        if (file) %7B%0A          const reader %3D new FileReader()%3B%0A          reader.onload %3D (e) %3D> %7B%0A            selectedImage %3D %7B%0A              data%3A e.target.result.split('%2C')%5B1%5D%2C%0A              mimeType%3A file.type%0A            %7D%3B%0A            imageBtn.textContent %3D "âœ…"%3B%0A            imageBtn.style.background %3D "rgba(0%2C150%2C0%2C0.3)"%3B%0A          %7D%3B%0A          reader.readAsDataURL(file)%3B%0A        %7D%0A      %7D%3B%0A%0A      async function sendMessage() %7B%0A        const message %3D textInput.value.trim()%3B%0A        if (!message %26%26 !selectedImage) return%3B%0A%0A        const finalMessage %3D message %7C%7C "(Image sent)"%3B%0A        await sendToAI(finalMessage%2C selectedImage)%3B%0A       %0A        textInput.value %3D ""%3B%0A        selectedImage %3D null%3B%0A        imageBtn.textContent %3D "ðŸ“·"%3B%0A        imageBtn.style.background %3D "rgba(255%2C255%2C255%2C0.1)"%3B%0A        fileInput.value %3D ""%3B%0A      %7D%0A%0A      sendBtn.onclick %3D sendMessage%3B%0A%0A      textInput.onkeypress %3D (e) %3D> %7B%0A        if (e.key %3D%3D%3D 'Enter') %7B%0A          sendMessage()%3B%0A        %7D%0A      %7D%3B%0A%0A      inputContainer.append(textInput%2C fileInput%2C imageBtn%2C sendBtn)%3B%0A      return inputContainer%3B%0A    %7D%0A %0A    function renderTabs() %7B%0A      document.querySelector("%23tabContainer")%3F.remove()%3B%0A   %0A      const container %3D document.createElement("div")%3B%0A      container.id %3D "tabContainer"%3B%0A      container.style %3D %60%0A        position%3A fixed%3B%0A        bottom%3A 30px%3B%0A        right%3A 10px%3B%0A        width%3A 320px%3B%0A        height%3A 400px%3B%0A        background%3A rgba(255%2C 255%2C 255%2C 0.05)%3B%0A        color%3A %23ccc%3B%0A        font-size%3A 11px%3B%0A        border-radius%3A 4px%3B%0A        display%3A none%3B%0A        flex-direction%3A column%3B%0A        z-index%3A 9999%3B%0A        backdrop-filter%3A blur(3px)%3B%0A        font-family%3A sans-serif%3B%0A        overflow%3A hidden%3B%0A      %60%3B%0A   %0A      const tabHeader %3D document.createElement("div")%3B%0A      tabHeader.style %3D "display%3A flex%3B height%3A 24px%3B"%3B%0A   %0A      const aiTab %3D document.createElement("div")%3B%0A      aiTab.textContent %3D "AI"%3B%0A      aiTab.style %3D "flex%3A 1%3B text-align%3A center%3B cursor%3A pointer%3B padding%3A 4px%3B background%3A rgba(255%2C255%2C255%2C0.02)%3B"%3B%0A   %0A      const chatTab %3D document.createElement("div")%3B%0A      chatTab.textContent %3D "Chat"%3B%0A      chatTab.style %3D "flex%3A 1%3B text-align%3A center%3B cursor%3A pointer%3B padding%3A 4px%3B"%3B%0A%0A      const notesTab %3D document.createElement("div")%3B%0A      notesTab.textContent %3D "Notes"%3B%0A      notesTab.style %3D "flex%3A 1%3B text-align%3A center%3B cursor%3A pointer%3B padding%3A 4px%3B"%3B%0A   %0A      const contentBox %3D document.createElement("div")%3B%0A      contentBox.id %3D "tabContent"%3B%0A      contentBox.style %3D %60%0A        flex%3A 1%3B%0A        overflow-y%3A auto%3B%0A        padding%3A 4px%3B%0A        white-space%3A pre-wrap%3B%0A        line-height%3A 1.3%3B%0A      %60%3B%0A   %0A      function switchTab(tab) %7B%0A        %2F%2F Reset all tabs%0A        %5BaiTab%2C chatTab%2C notesTab%5D.forEach(t %3D> t.style.background %3D "transparent")%3B%0A       %0A        if (tab %3D%3D%3D "ai") %7B%0A          aiTab.style.background %3D "rgba(255%2C255%2C255%2C0.02)"%3B%0A          contentBox.innerHTML %3D ""%3B%0A          contentBox.textContent %3D localStorage.getItem("aiResponse") %7C%7C "(No AI response yet)"%3B%0A          contentBox.contentEditable %3D "false"%3B%0A        %7D else if (tab %3D%3D%3D "chat") %7B%0A          chatTab.style.background %3D "rgba(255%2C255%2C255%2C0.02)"%3B%0A          contentBox.innerHTML %3D ""%3B%0A          contentBox.contentEditable %3D "false"%3B%0A         %0A          %2F%2F Create chat interface%0A          const chatContent %3D document.createElement("div")%3B%0A          chatContent.id %3D "chatContent"%3B%0A          chatContent.style.cssText %3D %60%0A            flex%3A 1%3B%0A            overflow-y%3A auto%3B%0A            padding%3A 4px%3B%0A            margin-bottom%3A 4px%3B%0A          %60%3B%0A         %0A          const chatInput %3D createChatInput()%3B%0A         %0A          contentBox.style.display %3D "flex"%3B%0A          contentBox.style.flexDirection %3D "column"%3B%0A          contentBox.append(chatContent%2C chatInput)%3B%0A         %0A          renderChatHistory()%3B%0A        %7D else %7B%0A          notesTab.style.background %3D "rgba(255%2C255%2C255%2C0.02)"%3B%0A          contentBox.innerHTML %3D ""%3B%0A          contentBox.style.display %3D "block"%3B%0A          contentBox.textContent %3D localStorage.getItem("persistentNotes") %7C%7C ""%3B%0A          contentBox.contentEditable %3D "true"%3B%0A          contentBox.oninput %3D () %3D> %7B%0A            localStorage.setItem("persistentNotes"%2C contentBox.textContent)%3B%0A          %7D%3B%0A        %7D%0A      %7D%0A   %0A      aiTab.onclick %3D () %3D> switchTab("ai")%3B%0A      chatTab.onclick %3D () %3D> switchTab("chat")%3B%0A      notesTab.onclick %3D () %3D> switchTab("notes")%3B%0A   %0A      tabHeader.append(aiTab%2C chatTab%2C notesTab)%3B%0A      container.append(tabHeader%2C contentBox)%3B%0A      document.body.appendChild(container)%3B%0A    %7D%0A   %0A %0A    function cleanupUIOnly() %7B%0A      %5B"requestAIButton"%2C "starButton"%2C "panicButton"%2C "tabContainer"%5D.forEach(id %3D> %7B%0A        const el %3D document.getElementById(id)%3B%0A        if (el) el.remove()%3B%0A      %7D)%3B%0A    %7D%0A %0A    %2F%2F Create Buttons%0A %0A    const styleCommon %3D %60%0A      position%3A fixed%3B%0A      font-size%3A 14px%3B%0A      background%3A transparent%3B%0A      color%3A %23999%3B%0A      cursor%3A pointer%3B%0A      z-index%3A 9999%3B%0A      user-select%3A none%3B%0A      opacity%3A 0.6%3B%0A    %60%3B%0A %0A    %2F%2F %3F Button (Ask AI)%0A    const askBtn %3D document.createElement("div")%3B%0A    askBtn.textContent %3D "%3F"%3B%0A    askBtn.id %3D "requestAIButton"%3B%0A    askBtn.style %3D styleCommon %2B "bottom%3A 10px%3B left%3A 10px%3B"%3B%0A    askBtn.onclick %3D processClipboardContent%3B%0A    document.body.appendChild(askBtn)%3B%0A %0A    %2F%2F * Button (Open Tabs)%0A    const starBtn %3D document.createElement("div")%3B%0A    starBtn.textContent %3D "*"%3B%0A    starBtn.id %3D "starButton"%3B%0A    starBtn.style %3D styleCommon %2B "bottom%3A 10px%3B right%3A 10px%3B"%3B%0A    starBtn.onclick %3D () %3D> %7B%0A      const box %3D document.getElementById("tabContainer")%3B%0A      if (!box) %7B%0A        renderTabs()%3B%0A      %7D else %7B%0A        box.style.display %3D box.style.display %3D%3D%3D "none" %3F "flex" %3A "none"%3B%0A      %7D%0A    %7D%3B%0A    document.body.appendChild(starBtn)%3B%0A %0A    %2F%2F ! Button (Panic â€“ Hide UI)%0A    const panicBtn %3D document.createElement("div")%3B%0A    panicBtn.textContent %3D "!"%3B%0A    panicBtn.id %3D "panicButton"%3B%0A    panicBtn.style %3D styleCommon %2B "bottom%3A 10px%3B left%3A 50%25%3B transform%3A translateX(-50%25)%3B"%3B%0A    panicBtn.onclick %3D cleanupUIOnly%3B%0A    document.body.appendChild(panicBtn)%3B%0A %0A    %2F%2F Restore UI if script re-run%0A    if (localStorage.getItem("aiResponse") %7C%7C localStorage.getItem("persistentNotes")) %7B%0A      %2F%2F renderTabs()%3B%0A    %7D%0A  %7D)()%3B%7D)()%7D)()%3B
